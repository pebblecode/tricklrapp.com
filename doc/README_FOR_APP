# Tricklr

Tricklr is a simple to use web app for marketing teams and high volume tweeters. Tricklr helps you effectively manage your Twitter feed by trickling out tweets at regular intervals. 

## Running the site

For initial installation (should only need to be done once)

  gem install bundle
  bundle install
  
  # Set up the database
  # Copy config/database.yml.example to config/database.yml, and change the relevant values
  bundle exec rake db:create
  bundle exec rake db:migrate
  

Run the site

  # If the Gemfile has changed, you will need to run 'bundle install' first
  bundle exec rails s

  
To start the resque workers
  
  foreman start
  
To precompile assets

  bundle exec rake assets:precompile
  
### Running the site on Virtual Box

Add this to the hosts file (C:\WINDOWS\system32\drivers\etc):

  10.0.2.2        tricklr.local
  
To access the site, go to:

  http://tricklr.local:3000/
  
**Note: you need the http://, and 3000 should be the port number the server is run on
  
## Testing

For testing, the following is used:

* [Rspec](http://rspec.info/)
* [Capybara](https://github.com/jnicklas/capybara) - acceptance testing with html interaction
* [Spork](https://github.com/timcharper/spork) - preloads rails env to run tests faster
* [Guard](https://github.com/guard/guard) - automatically runs tests

See [railscast spork](http://railscasts.com/episodes/285-spork) on how to initially set it up spork and guard. 
**Note: All the necessary files should already be set up in the git repo.**

To set up the test environment:

  rake db:create RAILS_ENV=test
  rake db:migrate RAILS_ENV=test

To automate tests running in the background:

  guard

To focus guard tests to just run a particular test, use the :focus tag in specs eg,

  it 'renders the index template', :focus do
    response.should render_template("index")
  end

To run tests manually:
  
  # Run the spork server:
  spork
  
  # In another terminal, run the tests
  rspec . --drb
  rspec ./spec/controllers/statuses_controller_spec.rb --drb     # to run individual tests
  

